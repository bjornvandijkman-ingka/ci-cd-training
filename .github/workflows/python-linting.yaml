name: python-linting

permissions: write-all

on:
  pull_request


jobs:

  pylint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Python
      uses: "actions/setup-python@v2"
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Find changed Python files
      id: files
      uses: umani/changed-files@v3.3.0
      with:
        repo-token: ${{ github.token }}
        pattern: '^.*\.(py)$'
        result-encoding: 'string'

    - name: Lint with pylint
      if: steps.files.outputs.files_updated != '' || steps.files.outputs.files_created != ''
      working-directory: ./
      run: |
        echo '${{ steps.files.outputs.files_updated }} ${{ steps.files.outputs.files_created }}'
        OUTPUT=$(pylint ${{ steps.files.outputs.files_updated }} ${{ steps.files.outputs.files_created }} --ignore airflow --exit-zero)
        echo 'MESSAGE<<EOF' >> $GITHUB_ENV
        echo  "$OUTPUT"  >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Please aim to have a quality of score of at least 5.0 or higher

    - name: Create comment
      if: steps.fc.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          **ðŸ¥‡ Pylint Result**
          ```
          ${{ env.MESSAGE }}
          ```
          Please aim to have a quality of score of at least 5.0 or higher

    - name: Update comment
      if: steps.fc.outputs.comment-id != ''
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: |
          ---
          **ðŸ†• Updated Pylint**
          ```
          ${{ env.MESSAGE }}
          ```
